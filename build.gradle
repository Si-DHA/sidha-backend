plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.sonarqube" version "4.4.1.3373"
}

group = 'com.sidha'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  runtimeOnly 'org.postgresql:postgresql'
  implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.3'
	implementation 'org.mapstruct:mapstruct:1.5.0.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.0.Final'
	implementation ('com.github.javafaker:javafaker:1.0.2') { exclude module: 'org.yaml' }
	implementation group: 'org.yaml', name: 'snakeyaml', version: '1.26'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api-parent:4.0.0'
	implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.2'
	implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'jakarta.servlet:jakarta.servlet-api:5.0.0'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'org.modelmapper:modelmapper:3.2.0'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    testImplementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2', 'io.jsonwebtoken:jjwt-jackson:0.11.2'


}

tasks.named('test') {
	useJUnitPlatform()
}
